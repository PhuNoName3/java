/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.connect;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author phu
 */
public class PhongChieu extends javax.swing.JFrame {

    /**
     * Creates new form Phong
     */
    public PhongChieu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableMain = new javax.swing.JTable();
        btlSua = new javax.swing.JButton();
        btlXoa = new javax.swing.JButton();
        btlThem = new javax.swing.JButton();
        btlTimKiem = new javax.swing.JButton();
        txtMaPhong = new javax.swing.JTextField();
        txtTenPhong = new javax.swing.JTextField();
        txtSLP = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btlThoat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tableMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Phòng", "Tên Phòng", "Số Lượng Ghế"
            }
        ));
        tableMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMainMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableMain);

        btlSua.setText("Sửa");
        btlSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlSuaActionPerformed(evt);
            }
        });

        btlXoa.setText("Xóa");
        btlXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlXoaActionPerformed(evt);
            }
        });

        btlThem.setText("Thêm");
        btlThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlThemActionPerformed(evt);
            }
        });

        btlTimKiem.setText("Tìm kiếm");
        btlTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlTimKiemActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã Phòng");

        jLabel2.setText("Số Lượng Ghế");

        jLabel3.setText("Tên Phòng");

        btlThoat.setText("Thoát");
        btlThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btlThem)
                            .addComponent(btlSua))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btlTimKiem)
                            .addComponent(btlXoa))
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(53, 53, 53))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(38, 38, 38)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtMaPhong, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(txtTenPhong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(txtSLP, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btlThoat)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btlThoat)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSLP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btlThem)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btlSua)
                            .addComponent(btlTimKiem)))
                    .addComponent(btlXoa))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ShowDuLieu(){
    try{
            tableMain.removeAll();
            String[] arr = {" Mã Phòng","Tên Phòng", "Số Lượng Ghế"};
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            
             Connection connection = Connect.getConnection();
             if (connection == null) {
    JOptionPane.showMessageDialog(this, "Kết nối cơ sở dữ liệu thất bại!");
    return;
}
            String query = " Select * from PhongChieu";
            PreparedStatement ps = connection.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                Vector vector = new Vector();
                vector.add(rs.getString("MaPhong"));
                vector.add(rs.getString("TenPhong"));
                vector.add(rs.getString("SoLuongGhe"));
                model.addRow(vector);
            }
            Connect.closeConnection(connection);
           tableMain.setModel(model);
    }catch(SQLException ex){
        Logger.getLogger(PhongChieu.class.getName()).log(Level.SEVERE, null, ex);
    }
   }
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        ShowDuLieu();
    }//GEN-LAST:event_formComponentShown

    private void btlThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlThemActionPerformed

        if(txtMaPhong.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Mã phòng để chống");
            txtMaPhong.requestFocus();
            return;
        }else if (txtTenPhong.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Tên phòng để chống");
            txtTenPhong.requestFocus();
            return;
        } else if (txtSLP.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Số lượng ghế để chống");
            txtSLP.requestFocus();
            return;    
        }
            try {
        Connection connection = Connect.getConnection();
        String query = "INSERT INTO dbo.[PhongChieu](MaPhong, TenPhong, SoLuongGhe) VALUES (?, ?, ?)";
        PreparedStatement ps = connection.prepareStatement(query);
        ps.setString(1, txtMaPhong.getText());
        ps.setString(2, txtTenPhong.getText());
        ps.setInt(3, Integer.parseInt(txtSLP.getText()));
        ps.executeUpdate();
        Connect.closeConnection(connection);
        JOptionPane.showMessageDialog(this, "Thêm thành công!");
        ShowDuLieu(); // Cập nhật lại bảng sau khi thêm
    } catch (SQLException ex) {
        Logger.getLogger(PhongChieu.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Thêm thất bại!");
    }
    }//GEN-LAST:event_btlThemActionPerformed

    private void btlXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlXoaActionPerformed
        // TODO add your handling code here:
    int result = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa?");
    if (result == JOptionPane.YES_OPTION) { // Kiểm tra xem người dùng có chọn "Yes" không

    int position = tableMain.getSelectedRow();
    if (position >= 0) { // Kiểm tra xem có hàng nào được chọn không
        String data = tableMain.getModel().getValueAt(position, 0).toString();
        try (Connection connection = Connect.getConnection()) {
            String query = "DELETE FROM dbo.PhongChieu WHERE MaPhong = ?"; // Sửa tên bảng và cột
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, data); // Thiết lập giá trị cho tham số
            ps.executeUpdate();
            ShowDuLieu(); // Cập nhật lại dữ liệu trên JTable          
           Connect.closeConnection(connection);
            JOptionPane.showMessageDialog(null, "Xóa thành công!");
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi khi xóa: " + ex.getMessage()); // Hiển thị thông báo lỗi
        }
    } else {
        JOptionPane.showMessageDialog(null, "Vui lòng chọn một hàng để xóa.");
    }
}
    }//GEN-LAST:event_btlXoaActionPerformed

    private void btlSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlSuaActionPerformed
        // TODO add your handling code here:
         int selectedRow = tableMain.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Vui lòng chọn một phòng chiếu để sửa.");
        return;
    }

    // Lấy mã phòng từ hàng được chọn (giả sử cột đầu tiên là MaPhong)
    String maPhong = tableMain.getModel().getValueAt(selectedRow, 0).toString();

    // Lấy dữ liệu mới từ các JTextField
    String tenPhongMoi = txtTenPhong.getText();
    int soLuongGheMoi;
    try {
        soLuongGheMoi = Integer.parseInt(txtSLP.getText());
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Lỗi: Số lượng ghế phải là số nguyên.");
        return;
    }

    try (Connection connection = Connect.getConnection()) {
        String query = "UPDATE dbo.PhongChieu SET TenPhong = ?, SoLuongGhe = ? WHERE MaPhong = ?";
        PreparedStatement ps = connection.prepareStatement(query);
        ps.setString(1, tenPhongMoi);
        ps.setInt(2, soLuongGheMoi);
        ps.setString(3, maPhong);
        ps.executeUpdate();
        Connect.closeConnection(connection);

        // Cập nhật dữ liệu trên JTable
        tableMain.setValueAt(tenPhongMoi, selectedRow, 1); // Cập nhật cột TenPhong
        tableMain.setValueAt(soLuongGheMoi, selectedRow, 2); // Cập nhật cột SoLuongGhe

        JOptionPane.showMessageDialog(this, "Sửa thành công!");

    } catch (SQLException ex) {
        Logger.getLogger(PhongChieu.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Sửa thất bại!");
    }

    // Xóa dữ liệu đã nhập trong JTextField
    txtMaPhong.setText("");
    txtTenPhong.setText("");
    txtSLP.setText("");
    }//GEN-LAST:event_btlSuaActionPerformed

    private void btlThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlThoatActionPerformed
        // TODO add your handling code here:
                this.dispose();
                // Mở form chính 
                Main mainForm = new Main();
                mainForm.setVisible(true); 
    }//GEN-LAST:event_btlThoatActionPerformed

    private void tableMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMainMouseClicked
        // TODO add your handling code here:
          int selectedRow = tableMain.getSelectedRow();

    if (selectedRow >= 0) {
        DefaultTableModel model = (DefaultTableModel) tableMain.getModel();

        // Lấy dữ liệu từ các cột tương ứng và hiển thị lên các trường nhập liệu
        txtMaPhong.setText(model.getValueAt(selectedRow, 0).toString());
        txtTenPhong.setText(model.getValueAt(selectedRow, 1).toString());
        txtSLP.setText(model.getValueAt(selectedRow, 2).toString());

        // Nếu có các trường nhập liệu khác, bạn có thể thêm tương tự ở đây
    }
    }//GEN-LAST:event_tableMainMouseClicked

    private void btlTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlTimKiemActionPerformed
        // TODO add your handling code here:
         // Lấy giá trị từ các trường văn bản
    String maPhong = txtMaPhong.getText();
    String tenPhong = txtTenPhong.getText();
    String slghe = txtSLP.getText();
    
    // Tạo kết nối tới cơ sở dữ liệu
    try (Connection connection = Connect.getConnection()) {
        // Tạo câu lệnh SQL
        String sql = "SELECT * FROM PhongChieu WHERE MaPhong LIKE ? AND TenPhong LIKE ? AND SoLuongGhe LIKE ?";
        try (PreparedStatement stmt = connection.prepareStatement(sql)) {
            // Cài đặt tham số cho câu lệnh
            stmt.setString(1, maPhong.isEmpty() ? "%" : maPhong);
            stmt.setString(2, tenPhong.isEmpty() ? "%" : tenPhong);
            stmt.setString(3, slghe.isEmpty() ? "%" : slghe);
            
            // Thực thi câu lệnh và nhận kết quả
            try (ResultSet rs = stmt.executeQuery()) {
                // Tạo mô hình dữ liệu cho bảng
                DefaultTableModel model = new DefaultTableModel(new String[]{"MaPhong", "TenPhong", "SoLuongGhe"}, 0);
                
                // Đọc dữ liệu từ ResultSet và thêm vào mô hình
                while (rs.next()) {
                    String mp = rs.getString("MaPhong");
                    String tp = rs.getString("TenPhong");
                    String sl = rs.getString("SoLuongGhe");
                    model.addRow(new Object[]{mp, tp, sl});
                }
                
                // Cập nhật bảng với dữ liệu mới
                tableMain.setModel(model);
            }
        }
    } catch (SQLException e) {
        e.printStackTrace(); // Xử lý lỗi
        JOptionPane.showMessageDialog(this, "Lỗi khi tìm kiếm: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btlTimKiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhongChieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhongChieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhongChieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhongChieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhongChieu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btlSua;
    private javax.swing.JButton btlThem;
    private javax.swing.JButton btlThoat;
    private javax.swing.JButton btlTimKiem;
    private javax.swing.JButton btlXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMain;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtSLP;
    private javax.swing.JTextField txtTenPhong;
    // End of variables declaration//GEN-END:variables
}
